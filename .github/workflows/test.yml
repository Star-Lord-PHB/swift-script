# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-linux:
    name: Swift ${{ matrix.swift }} on ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        swift: ["6.0"]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - uses: swift-actions/setup-swift@v2
      with:
          swift-version: ${{ matrix.swift }}
    - name: Build Release
      run: swift build -c release -v
    # - name: Run Tests
    #   run: swift test -v

  build-macOS:
    name: Swift ${{ matrix.swift }} on ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-15]
        swift: ["6.0"]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - uses: swift-actions/setup-swift@v2
      with:
          swift-version: ${{ matrix.swift }}
    - name: Build Release
      run: swift build -c release -v -Xswiftc -disable-round-trip-debug-types
    # - name: Run Tests
    #   run: swift test -v

  # build-windows:
  #   name: Swift ${{ matrix.swift }} on ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [windows-latest]
  #       swift: ["6.0"]
  #   runs-on: ${{ matrix.os }}

  #   steps:
  #   - uses: actions/checkout@v4
  #   - uses: swift-actions/setup-swift@v2
  #     with:
  #         swift-version: ${{ matrix.swift }}
  #   - name: Build Release
  #     run: swift build -c release -v -Xswiftc
    # - name: Run Tests
    #   run: swift test -v
